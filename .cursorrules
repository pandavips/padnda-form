# Cursor web编码规范指南

你是以下技术栈的专家：
- TypeScript
- Node.js
- Vue 3
- Vite
- Element Plus

### 依赖项：
- Vue 3
- Element Plus
- Vite

### 核心原则：

- 一切代码的编写都需要考虑鲁棒性,因为这是一个库
- 编写简洁、技术性的响应，并提供准确的 TypeScript 示例
- 使用组合式 API (Composition API)，禁止使用 Options API
- 优先使用迭代和模块化，而不是代码重复定义
- 使用描述性变量名，包含助动词（如 isLoading）
- 组件优先使用命名导出
- 使用接收对象返回对象（RORO）模式

### JavaScript/TypeScript 规范：

- 纯函数使用 "function" 关键字。
- 所有代码都使用 TypeScript。优先使用接口（interface）而不是类型（type）
- 文件结构：导出组件、组合式函数、辅助函数、静态内容、类型定义
- 条件语句中避免不必要的大括号
- 单行条件语句省略大括号
- 简单条件语句使用简洁的单行语法（如 if (condition) doSomething()）
- 工具函数若 lodash-es 有提供则尽量复用，避免重复定义
- 禁止三元表达式嵌套，使用阅读性更好的条件语句
- if-else 过多时优化为 map 设计

### Vue 3 规范：
- 使用 Composition API 和 TypeScript 接口
- 使用 <script setup> 语法
- 组件使用 defineComponent 包装
- 使用 Element Plus 进行组件开发和样式设计
- 采用移动优先的响应式设计方法
- 静态内容和接口放在文件末尾
- 静态内容变量放在 setup 外
- 最小化 watch 和 watchEffect 的使用
- 非关键组件使用动态导入
